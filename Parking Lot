Parking Lot


Parking Lot
	Multiple Floor


Lot
	id
	type -- accessible(handy-cap), e-car, time limit
	available
	Vehicle


Vehicle 
	type -- bus, compact, SUV, moto-cycle
	plate #


How to charge fee
	- 
How to park
	- level available lots #


Parking Lot
	input, output

Dependency 应该放在抽象对象上
Ticket save relationship between vehicle and lot

- get availale count
- park vehicle
- clear lot
- calculate price 

Management 3 case: reserve, serve, checkout

Parking Lot
	- List<car> cars
	- availableCount
	+ List<spot> findSpotsForVehicle(Vehicle v)
	+ void parkVehicle() // 一个requirement,对应一个func
	+ void clearSpot(ticket t)
	- float calculatePrice(Ticket t)



// since multiple floor
	List<Level> levels
	availabbleCount
	+ getAvailableCount

Level
	List<Spot> spots
	+ getAvailableCount


Vehicle
	# Int size 
	+ getSize()
	+ void takeSpot(list<Spot>) // 动态的，不放在实体里
	+ void clearSpot(Ticket t)

Car,Bus, Motorcycle

Spot
	available
	+ isAvailable
	+ takeSpot()
	+ leaveSpot()

Ticket
	vehicle c
	list<spot> spots
	Time startTime
	Charge fee per hour






